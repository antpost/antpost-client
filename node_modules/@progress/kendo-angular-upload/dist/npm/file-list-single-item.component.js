"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var animations_1 = require("@angular/animations");
var file_info_1 = require("./file-info");
var file_list_item_base_1 = require("./file-list-item-base");
var kendo_angular_l10n_1 = require("@progress/kendo-angular-l10n");
/**
 * @hidden
 */
var FileListSingleItemComponent = (function (_super) {
    __extends(FileListSingleItemComponent, _super);
    function FileListSingleItemComponent(localization) {
        var _this = _super.call(this) || this;
        _this.localization = localization;
        return _this;
    }
    /**
     * @hidden
     */
    FileListSingleItemComponent.prototype.textFor = function (key) {
        return this.localization.get(key);
    };
    Object.defineProperty(FileListSingleItemComponent.prototype, "showProgress", {
        /**
         * @hidden
         */
        get: function () {
            return (this.file.state === file_info_1.FileState.Uploading) ? 'active' : 'inactive';
        },
        enumerable: true,
        configurable: true
    });
    return FileListSingleItemComponent;
}(file_list_item_base_1.FileListItemBase));
FileListSingleItemComponent.decorators = [
    { type: core_1.Component, args: [{
                animations: [
                    animations_1.trigger('progressState', [
                        animations_1.state('active', animations_1.style({ opacity: 1 })),
                        animations_1.state('inactive', animations_1.style({ opacity: 0 })),
                        animations_1.transition('void => active', animations_1.style({ opacity: 0 })),
                        animations_1.transition('inactive => active', animations_1.style({ opacity: 1 })),
                        animations_1.transition('active => inactive', animations_1.animate('1s 2s ease-out'))
                    ])
                ],
                selector: 'kendo-upload-file-list-single-item',
                template: "\n      <span class=\"k-progress\" style=\"width: 100%;\" [@progressState]=\"showProgress\"></span>\n      <ng-template [ngIf]='file.validationErrors && file.validationErrors.length > 0'>\n        <span class=\"k-file-invalid-extension-wrapper\">\n          <span class=\"k-file-invalid-icon\">!</span>\n          <span class=\"k-file-state\"></span>\n        </span>\n        <span class=\"k-file-name-size-wrapper\">\n          <span class=\"k-file-name k-file-name-invalid\" [title]=\"file.name\">{{ file.name }}</span>\n          <span class=\"k-file-validation-message\">{{ getFileValidationMessage(file, localization) }}</span>\n        </span>\n      </ng-template>\n      <ng-template [ngIf]='!file.validationErrors || file.validationErrors.length === 0'>\n        <span class=\"k-file-extension-wrapper\">\n          <span class=\"k-file-extension\">{{ file.extension.substring(1) }}</span>\n          <span class=\"k-file-state\"></span>\n        </span>\n        <span class=\"k-file-name-size-wrapper\">\n          <span class=\"k-file-name\" [title]=\"file.name\">{{ file.name }}</span>\n          <span class=\"k-file-size\">{{ getTotalFilesSizeMessage([file]) }}</span>\n        </span>\n      </ng-template>\n      <kendo-upload-file-list-item-action-button\n        [file]='file'\n        [disabled]='disabled'\n        [async]='async'>\n      </kendo-upload-file-list-item-action-button>\n    "
            },] },
];
/** @nocollapse */
FileListSingleItemComponent.ctorParameters = function () { return [
    { type: kendo_angular_l10n_1.LocalizationService, },
]; };
FileListSingleItemComponent.propDecorators = {
    'disabled': [{ type: core_1.Input },],
    'file': [{ type: core_1.Input },],
    'async': [{ type: core_1.Input },],
};
exports.FileListSingleItemComponent = FileListSingleItemComponent;
