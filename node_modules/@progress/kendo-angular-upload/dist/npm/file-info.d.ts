import { Subscription } from 'rxjs';
/**
 * Contains information related to the selected file.
 */
export interface FileInfo {
    /**
     * The unique identifier of the file or the batch of files.
     */
    uid?: string;
    /**
     * The file name.
     */
    name: string;
    /**
     * The file extension including the leading dot&mdash;for example, `.jpg`, `.png`, or other.
     */
    extension?: string;
    /**
     * The file size in bytes.
     */
    size?: number;
    /**
     * An in-memory representation of the file.
     */
    rawFile?: File;
    /**
     * A list containing the validation errors (if any).
     */
    validationErrors?: Array<string>;
    /**
     * The current state of the file&mdash;`Failed`, `Selected`, `Uploaded`, or `Uploading`.
     * A special value for `FileState` is `Initial`. It is automatically applied to initial files without explicitly set state.
     */
    state?: FileState;
    /**
     * The observable subscription of the upload request.
     */
    httpSubscription?: Subscription;
}
/**
 * Lists the possible states of a file.
 */
export declare enum FileState {
    /**
     * The file upload process has failed.
     */
    Failed = 0,
    /**
     * An initially selected fake file without set state.
     */
    Initial = 1,
    /**
     * The file is selected.
     */
    Selected = 2,
    /**
     * The file is successfully uploaded.
     */
    Uploaded = 3,
    /**
     * The file is in the process of uploading.
     */
    Uploading = 4,
}
